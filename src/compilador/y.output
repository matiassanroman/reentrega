   0  $accept : programa $end

   1  programa : bloquePrograma

   2  bloquePrograma : bloquePrograma sentenciaDeclarativa
   3                 | bloquePrograma sentenciaEjecutable
   4                 | sentenciaDeclarativa
   5                 | sentenciaEjecutable

   6  sentenciaDeclarativa : tipo listaVariables ';'
   7                       | declaracionProcedimiento

   8  listaVariables : listaVariables ',' identificador
   9                 | identificador

  10  declaracionProcedimiento : encabezadoProc bloqueProc

  11  encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' CTE ',' NS '=' CTE
  12                 | PROC identificador '(' ')' NA '=' CTE ',' NS '=' CTE

  13  parametrosProc : parametro
  14                 | parametro ',' parametro
  15                 | parametro ',' parametro ',' parametro

  16  parametro : tipo identificador

  17  bloqueProc : '{' bloque '}'

  18  bloque : bloque sentenciaDeclarativa
  19         | bloque sentenciaEjecutable
  20         | sentenciaDeclarativa
  21         | sentenciaEjecutable

  22  sentenciaEjecutable : asignacion
  23                      | OUT '(' CADENA ')' ';'
  24                      | OUT '(' error ')' ';'
  25                      | error '(' CADENA ')' ';'
  26                      | identificador '(' parametrosProc ')' ';'
  27                      | identificador '(' ')' ';'
  28                      | IF cuerpoIf
  29                      | cicloFor

  30  cicloFor : FOR '(' condicionFor ')' '{' bloqueSentencia '}'

  31  condicionFor : inicioFor ';' condiFOR ';' incDec

  32  condiFOR : condicion

  33  inicioFor : identificador '=' constante

  34  condicion : identificador comparador asignacion
  35            | identificador comparador identificador
  36            | identificador comparador constante

  37  incDec : UP constante
  38         | DOWN constante
  39         | error constante

  40  bloqueSentencia : bloqueSentencia sentenciaEjecutable
  41                  | sentenciaEjecutable

  42  cuerpoIf : cuerpoCompleto END_IF
  43           | cuerpoIncompleto END_IF

  44  cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE '{' bloqueElse '}'
  45                 | '(' condicionIf ')' sentenciaEjecutable ELSE '{' bloqueElse '}'
  46                 | '(' condicionIf ')' '{' bloqueThen '}' ELSE sentenciaEjecutable
  47                 | '(' condicionIf ')' sentenciaEjecutable ELSE sentenciaEjecutable

  48  condicionIf : condicion

  49  bloqueThen : bloqueSentencia

  50  bloqueElse : bloqueSentencia

  51  cuerpoIncompleto : '(' condicionIf ')' '{' bloqueThen '}'
  52                   | '(' condicionIf ')' sentenciaEjecutable

  53  asignacion : identificador '=' expresion ';'
  54             | error '=' expresion ';'

  55  expresion : expresion '+' termino
  56            | expresion '-' termino
  57            | termino

  58  termino : termino '*' factor
  59          | termino '/' factor
  60          | factor

  61  factor : constante
  62         | identificador

  63  comparador : "<="
  64             | ">="
  65             | "!="
  66             | "=="
  67             | '>'
  68             | '<'
  69             | error

  70  tipo : FLOAT
  71       | INTEGER
  72       | error

  73  identificador : ID

  74  constante : ctePositiva
  75            | cteNegativa

  76  ctePositiva : CTE
  77              | error

  78  cteNegativa : '-' CTE
  79              | '-' error

state 0
	$accept : . programa $end  (0)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	INTEGER  shift 6
	FLOAT  shift 7
	PROC  shift 8
	.  error

	programa  goto 9
	bloquePrograma  goto 10
	sentenciaDeclarativa  goto 11
	sentenciaEjecutable  goto 12
	tipo  goto 13
	declaracionProcedimiento  goto 14
	identificador  goto 15
	encabezadoProc  goto 16
	asignacion  goto 17
	cicloFor  goto 18


state 1
	sentenciaEjecutable : error . '(' CADENA ')' ';'  (25)
	asignacion : error . '=' expresion ';'  (54)
	tipo : error .  (72)

	'('  shift 19
	'='  shift 20
	ID  reduce 72


state 2
	identificador : ID .  (73)

	.  reduce 73


state 3
	sentenciaEjecutable : IF . cuerpoIf  (28)

	'('  shift 21
	.  error

	cuerpoIf  goto 22
	cuerpoCompleto  goto 23
	cuerpoIncompleto  goto 24


state 4
	sentenciaEjecutable : OUT . '(' CADENA ')' ';'  (23)
	sentenciaEjecutable : OUT . '(' error ')' ';'  (24)

	'('  shift 25
	.  error


state 5
	cicloFor : FOR . '(' condicionFor ')' '{' bloqueSentencia '}'  (30)

	'('  shift 26
	.  error


state 6
	tipo : INTEGER .  (71)

	.  reduce 71


state 7
	tipo : FLOAT .  (70)

	.  reduce 70


state 8
	encabezadoProc : PROC . identificador '(' parametrosProc ')' NA '=' CTE ',' NS '=' CTE  (11)
	encabezadoProc : PROC . identificador '(' ')' NA '=' CTE ',' NS '=' CTE  (12)

	ID  shift 2
	.  error

	identificador  goto 27


state 9
	$accept : programa . $end  (0)

	$end  accept


state 10
	programa : bloquePrograma .  (1)
	bloquePrograma : bloquePrograma . sentenciaDeclarativa  (2)
	bloquePrograma : bloquePrograma . sentenciaEjecutable  (3)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	INTEGER  shift 6
	FLOAT  shift 7
	PROC  shift 8
	$end  reduce 1

	sentenciaDeclarativa  goto 28
	sentenciaEjecutable  goto 29
	tipo  goto 13
	declaracionProcedimiento  goto 14
	identificador  goto 15
	encabezadoProc  goto 16
	asignacion  goto 17
	cicloFor  goto 18


state 11
	bloquePrograma : sentenciaDeclarativa .  (4)

	.  reduce 4


state 12
	bloquePrograma : sentenciaEjecutable .  (5)

	.  reduce 5


state 13
	sentenciaDeclarativa : tipo . listaVariables ';'  (6)

	ID  shift 2
	.  error

	listaVariables  goto 30
	identificador  goto 31


state 14
	sentenciaDeclarativa : declaracionProcedimiento .  (7)

	.  reduce 7


state 15
	sentenciaEjecutable : identificador . '(' parametrosProc ')' ';'  (26)
	sentenciaEjecutable : identificador . '(' ')' ';'  (27)
	asignacion : identificador . '=' expresion ';'  (53)

	'('  shift 32
	'='  shift 33
	.  error


state 16
	declaracionProcedimiento : encabezadoProc . bloqueProc  (10)

	'{'  shift 34
	.  error

	bloqueProc  goto 35


state 17
	sentenciaEjecutable : asignacion .  (22)

	.  reduce 22


state 18
	sentenciaEjecutable : cicloFor .  (29)

	.  reduce 29


state 19
	sentenciaEjecutable : error '(' . CADENA ')' ';'  (25)

	CADENA  shift 36
	.  error


state 20
	asignacion : error '=' . expresion ';'  (54)

	error  shift 37
	ID  shift 2
	CTE  shift 38
	'-'  shift 39
	.  error

	identificador  goto 40
	constante  goto 41
	expresion  goto 42
	termino  goto 43
	factor  goto 44
	ctePositiva  goto 45
	cteNegativa  goto 46


state 21
	cuerpoCompleto : '(' . condicionIf ')' '{' bloqueThen '}' ELSE '{' bloqueElse '}'  (44)
	cuerpoCompleto : '(' . condicionIf ')' sentenciaEjecutable ELSE '{' bloqueElse '}'  (45)
	cuerpoCompleto : '(' . condicionIf ')' '{' bloqueThen '}' ELSE sentenciaEjecutable  (46)
	cuerpoCompleto : '(' . condicionIf ')' sentenciaEjecutable ELSE sentenciaEjecutable  (47)
	cuerpoIncompleto : '(' . condicionIf ')' '{' bloqueThen '}'  (51)
	cuerpoIncompleto : '(' . condicionIf ')' sentenciaEjecutable  (52)

	ID  shift 2
	.  error

	identificador  goto 47
	condicion  goto 48
	condicionIf  goto 49


state 22
	sentenciaEjecutable : IF cuerpoIf .  (28)

	.  reduce 28


state 23
	cuerpoIf : cuerpoCompleto . END_IF  (42)

	END_IF  shift 50
	.  error


state 24
	cuerpoIf : cuerpoIncompleto . END_IF  (43)

	END_IF  shift 51
	.  error


state 25
	sentenciaEjecutable : OUT '(' . CADENA ')' ';'  (23)
	sentenciaEjecutable : OUT '(' . error ')' ';'  (24)

	error  shift 52
	CADENA  shift 53
	.  error


state 26
	cicloFor : FOR '(' . condicionFor ')' '{' bloqueSentencia '}'  (30)

	ID  shift 2
	.  error

	identificador  goto 54
	condicionFor  goto 55
	inicioFor  goto 56


state 27
	encabezadoProc : PROC identificador . '(' parametrosProc ')' NA '=' CTE ',' NS '=' CTE  (11)
	encabezadoProc : PROC identificador . '(' ')' NA '=' CTE ',' NS '=' CTE  (12)

	'('  shift 57
	.  error


state 28
	bloquePrograma : bloquePrograma sentenciaDeclarativa .  (2)

	.  reduce 2


state 29
	bloquePrograma : bloquePrograma sentenciaEjecutable .  (3)

	.  reduce 3


state 30
	sentenciaDeclarativa : tipo listaVariables . ';'  (6)
	listaVariables : listaVariables . ',' identificador  (8)

	';'  shift 58
	','  shift 59
	.  error


state 31
	listaVariables : identificador .  (9)

	.  reduce 9


state 32
	sentenciaEjecutable : identificador '(' . parametrosProc ')' ';'  (26)
	sentenciaEjecutable : identificador '(' . ')' ';'  (27)

	error  shift 60
	INTEGER  shift 6
	FLOAT  shift 7
	')'  shift 61
	.  error

	tipo  goto 62
	parametrosProc  goto 63
	parametro  goto 64


state 33
	asignacion : identificador '=' . expresion ';'  (53)

	error  shift 37
	ID  shift 2
	CTE  shift 38
	'-'  shift 39
	.  error

	identificador  goto 40
	constante  goto 41
	expresion  goto 65
	termino  goto 43
	factor  goto 44
	ctePositiva  goto 45
	cteNegativa  goto 46


state 34
	bloqueProc : '{' . bloque '}'  (17)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	INTEGER  shift 6
	FLOAT  shift 7
	PROC  shift 8
	.  error

	sentenciaDeclarativa  goto 66
	sentenciaEjecutable  goto 67
	tipo  goto 13
	declaracionProcedimiento  goto 14
	identificador  goto 15
	encabezadoProc  goto 16
	bloque  goto 68
	asignacion  goto 17
	cicloFor  goto 18


state 35
	declaracionProcedimiento : encabezadoProc bloqueProc .  (10)

	.  reduce 10


state 36
	sentenciaEjecutable : error '(' CADENA . ')' ';'  (25)

	')'  shift 69
	.  error


state 37
	ctePositiva : error .  (77)

	.  reduce 77


state 38
	ctePositiva : CTE .  (76)

	.  reduce 76


state 39
	cteNegativa : '-' . CTE  (78)
	cteNegativa : '-' . error  (79)

	error  shift 70
	CTE  shift 71
	.  error


state 40
	factor : identificador .  (62)

	.  reduce 62


state 41
	factor : constante .  (61)

	.  reduce 61


state 42
	asignacion : error '=' expresion . ';'  (54)
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)

	'+'  shift 72
	'-'  shift 73
	';'  shift 74
	.  error


state 43
	expresion : termino .  (57)
	termino : termino . '*' factor  (58)
	termino : termino . '/' factor  (59)

	'*'  shift 75
	'/'  shift 76
	'+'  reduce 57
	'-'  reduce 57
	';'  reduce 57


state 44
	termino : factor .  (60)

	.  reduce 60


state 45
	constante : ctePositiva .  (74)

	.  reduce 74


state 46
	constante : cteNegativa .  (75)

	.  reduce 75


state 47
	condicion : identificador . comparador asignacion  (34)
	condicion : identificador . comparador identificador  (35)
	condicion : identificador . comparador constante  (36)

	error  shift 77
	"<="  shift 78
	">="  shift 79
	"!="  shift 80
	"=="  shift 81
	'>'  shift 82
	'<'  shift 83
	.  error

	comparador  goto 84


state 48
	condicionIf : condicion .  (48)

	.  reduce 48


state 49
	cuerpoCompleto : '(' condicionIf . ')' '{' bloqueThen '}' ELSE '{' bloqueElse '}'  (44)
	cuerpoCompleto : '(' condicionIf . ')' sentenciaEjecutable ELSE '{' bloqueElse '}'  (45)
	cuerpoCompleto : '(' condicionIf . ')' '{' bloqueThen '}' ELSE sentenciaEjecutable  (46)
	cuerpoCompleto : '(' condicionIf . ')' sentenciaEjecutable ELSE sentenciaEjecutable  (47)
	cuerpoIncompleto : '(' condicionIf . ')' '{' bloqueThen '}'  (51)
	cuerpoIncompleto : '(' condicionIf . ')' sentenciaEjecutable  (52)

	')'  shift 85
	.  error


state 50
	cuerpoIf : cuerpoCompleto END_IF .  (42)

	.  reduce 42


state 51
	cuerpoIf : cuerpoIncompleto END_IF .  (43)

	.  reduce 43


state 52
	sentenciaEjecutable : OUT '(' error . ')' ';'  (24)

	')'  shift 86
	.  error


state 53
	sentenciaEjecutable : OUT '(' CADENA . ')' ';'  (23)

	')'  shift 87
	.  error


state 54
	inicioFor : identificador . '=' constante  (33)

	'='  shift 88
	.  error


state 55
	cicloFor : FOR '(' condicionFor . ')' '{' bloqueSentencia '}'  (30)

	')'  shift 89
	.  error


state 56
	condicionFor : inicioFor . ';' condiFOR ';' incDec  (31)

	';'  shift 90
	.  error


state 57
	encabezadoProc : PROC identificador '(' . parametrosProc ')' NA '=' CTE ',' NS '=' CTE  (11)
	encabezadoProc : PROC identificador '(' . ')' NA '=' CTE ',' NS '=' CTE  (12)

	error  shift 60
	INTEGER  shift 6
	FLOAT  shift 7
	')'  shift 91
	.  error

	tipo  goto 62
	parametrosProc  goto 92
	parametro  goto 64


state 58
	sentenciaDeclarativa : tipo listaVariables ';' .  (6)

	.  reduce 6


state 59
	listaVariables : listaVariables ',' . identificador  (8)

	ID  shift 2
	.  error

	identificador  goto 93


state 60
	tipo : error .  (72)

	.  reduce 72


state 61
	sentenciaEjecutable : identificador '(' ')' . ';'  (27)

	';'  shift 94
	.  error


state 62
	parametro : tipo . identificador  (16)

	ID  shift 2
	.  error

	identificador  goto 95


state 63
	sentenciaEjecutable : identificador '(' parametrosProc . ')' ';'  (26)

	')'  shift 96
	.  error


state 64
	parametrosProc : parametro .  (13)
	parametrosProc : parametro . ',' parametro  (14)
	parametrosProc : parametro . ',' parametro ',' parametro  (15)

	','  shift 97
	')'  reduce 13


state 65
	asignacion : identificador '=' expresion . ';'  (53)
	expresion : expresion . '+' termino  (55)
	expresion : expresion . '-' termino  (56)

	'+'  shift 72
	'-'  shift 73
	';'  shift 98
	.  error


state 66
	bloque : sentenciaDeclarativa .  (20)

	.  reduce 20


state 67
	bloque : sentenciaEjecutable .  (21)

	.  reduce 21


state 68
	bloqueProc : '{' bloque . '}'  (17)
	bloque : bloque . sentenciaDeclarativa  (18)
	bloque : bloque . sentenciaEjecutable  (19)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	INTEGER  shift 6
	FLOAT  shift 7
	PROC  shift 8
	'}'  shift 99
	.  error

	sentenciaDeclarativa  goto 100
	sentenciaEjecutable  goto 101
	tipo  goto 13
	declaracionProcedimiento  goto 14
	identificador  goto 15
	encabezadoProc  goto 16
	asignacion  goto 17
	cicloFor  goto 18


state 69
	sentenciaEjecutable : error '(' CADENA ')' . ';'  (25)

	';'  shift 102
	.  error


state 70
	cteNegativa : '-' error .  (79)

	.  reduce 79


state 71
	cteNegativa : '-' CTE .  (78)

	.  reduce 78


state 72
	expresion : expresion '+' . termino  (55)

	error  shift 37
	ID  shift 2
	CTE  shift 38
	'-'  shift 39
	.  error

	identificador  goto 40
	constante  goto 41
	termino  goto 103
	factor  goto 44
	ctePositiva  goto 45
	cteNegativa  goto 46


state 73
	expresion : expresion '-' . termino  (56)

	error  shift 37
	ID  shift 2
	CTE  shift 38
	'-'  shift 39
	.  error

	identificador  goto 40
	constante  goto 41
	termino  goto 104
	factor  goto 44
	ctePositiva  goto 45
	cteNegativa  goto 46


state 74
	asignacion : error '=' expresion ';' .  (54)

	.  reduce 54


state 75
	termino : termino '*' . factor  (58)

	error  shift 37
	ID  shift 2
	CTE  shift 38
	'-'  shift 39
	.  error

	identificador  goto 40
	constante  goto 41
	factor  goto 105
	ctePositiva  goto 45
	cteNegativa  goto 46


state 76
	termino : termino '/' . factor  (59)

	error  shift 37
	ID  shift 2
	CTE  shift 38
	'-'  shift 39
	.  error

	identificador  goto 40
	constante  goto 41
	factor  goto 106
	ctePositiva  goto 45
	cteNegativa  goto 46


state 77
	comparador : error .  (69)

	.  reduce 69


state 78
	comparador : "<=" .  (63)

	.  reduce 63


state 79
	comparador : ">=" .  (64)

	.  reduce 64


state 80
	comparador : "!=" .  (65)

	.  reduce 65


state 81
	comparador : "==" .  (66)

	.  reduce 66


state 82
	comparador : '>' .  (67)

	.  reduce 67


state 83
	comparador : '<' .  (68)

	.  reduce 68


state 84
	condicion : identificador comparador . asignacion  (34)
	condicion : identificador comparador . identificador  (35)
	condicion : identificador comparador . constante  (36)

	error  shift 107
	ID  shift 2
	CTE  shift 38
	'-'  shift 39
	.  error

	identificador  goto 108
	asignacion  goto 109
	constante  goto 110
	ctePositiva  goto 45
	cteNegativa  goto 46


state 85
	cuerpoCompleto : '(' condicionIf ')' . '{' bloqueThen '}' ELSE '{' bloqueElse '}'  (44)
	cuerpoCompleto : '(' condicionIf ')' . sentenciaEjecutable ELSE '{' bloqueElse '}'  (45)
	cuerpoCompleto : '(' condicionIf ')' . '{' bloqueThen '}' ELSE sentenciaEjecutable  (46)
	cuerpoCompleto : '(' condicionIf ')' . sentenciaEjecutable ELSE sentenciaEjecutable  (47)
	cuerpoIncompleto : '(' condicionIf ')' . '{' bloqueThen '}'  (51)
	cuerpoIncompleto : '(' condicionIf ')' . sentenciaEjecutable  (52)

	error  shift 111
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'{'  shift 112
	.  error

	sentenciaEjecutable  goto 113
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 86
	sentenciaEjecutable : OUT '(' error ')' . ';'  (24)

	';'  shift 114
	.  error


state 87
	sentenciaEjecutable : OUT '(' CADENA ')' . ';'  (23)

	';'  shift 115
	.  error


state 88
	inicioFor : identificador '=' . constante  (33)

	error  shift 37
	CTE  shift 38
	'-'  shift 39
	.  error

	constante  goto 116
	ctePositiva  goto 45
	cteNegativa  goto 46


state 89
	cicloFor : FOR '(' condicionFor ')' . '{' bloqueSentencia '}'  (30)

	'{'  shift 117
	.  error


state 90
	condicionFor : inicioFor ';' . condiFOR ';' incDec  (31)

	ID  shift 2
	.  error

	identificador  goto 47
	condiFOR  goto 118
	condicion  goto 119


state 91
	encabezadoProc : PROC identificador '(' ')' . NA '=' CTE ',' NS '=' CTE  (12)

	NA  shift 120
	.  error


state 92
	encabezadoProc : PROC identificador '(' parametrosProc . ')' NA '=' CTE ',' NS '=' CTE  (11)

	')'  shift 121
	.  error


state 93
	listaVariables : listaVariables ',' identificador .  (8)

	.  reduce 8


state 94
	sentenciaEjecutable : identificador '(' ')' ';' .  (27)

	.  reduce 27


state 95
	parametro : tipo identificador .  (16)

	.  reduce 16


state 96
	sentenciaEjecutable : identificador '(' parametrosProc ')' . ';'  (26)

	';'  shift 122
	.  error


state 97
	parametrosProc : parametro ',' . parametro  (14)
	parametrosProc : parametro ',' . parametro ',' parametro  (15)

	error  shift 60
	INTEGER  shift 6
	FLOAT  shift 7
	.  error

	tipo  goto 62
	parametro  goto 123


state 98
	asignacion : identificador '=' expresion ';' .  (53)

	.  reduce 53


state 99
	bloqueProc : '{' bloque '}' .  (17)

	.  reduce 17


state 100
	bloque : bloque sentenciaDeclarativa .  (18)

	.  reduce 18


state 101
	bloque : bloque sentenciaEjecutable .  (19)

	.  reduce 19


state 102
	sentenciaEjecutable : error '(' CADENA ')' ';' .  (25)

	.  reduce 25


state 103
	expresion : expresion '+' termino .  (55)
	termino : termino . '*' factor  (58)
	termino : termino . '/' factor  (59)

	'*'  shift 75
	'/'  shift 76
	'+'  reduce 55
	'-'  reduce 55
	';'  reduce 55


state 104
	expresion : expresion '-' termino .  (56)
	termino : termino . '*' factor  (58)
	termino : termino . '/' factor  (59)

	'*'  shift 75
	'/'  shift 76
	'+'  reduce 56
	'-'  reduce 56
	';'  reduce 56


state 105
	termino : termino '*' factor .  (58)

	.  reduce 58


state 106
	termino : termino '/' factor .  (59)

	.  reduce 59


state 107
	asignacion : error . '=' expresion ';'  (54)
	ctePositiva : error .  (77)

	'='  shift 20
	';'  reduce 77
	')'  reduce 77


state 108
	condicion : identificador comparador identificador .  (35)
	asignacion : identificador . '=' expresion ';'  (53)

	'='  shift 33
	';'  reduce 35
	')'  reduce 35


state 109
	condicion : identificador comparador asignacion .  (34)

	.  reduce 34


state 110
	condicion : identificador comparador constante .  (36)

	.  reduce 36


state 111
	sentenciaEjecutable : error . '(' CADENA ')' ';'  (25)
	asignacion : error . '=' expresion ';'  (54)

	'('  shift 19
	'='  shift 20
	.  error


state 112
	cuerpoCompleto : '(' condicionIf ')' '{' . bloqueThen '}' ELSE '{' bloqueElse '}'  (44)
	cuerpoCompleto : '(' condicionIf ')' '{' . bloqueThen '}' ELSE sentenciaEjecutable  (46)
	cuerpoIncompleto : '(' condicionIf ')' '{' . bloqueThen '}'  (51)

	error  shift 111
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 124
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 125
	bloqueThen  goto 126


state 113
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable . ELSE '{' bloqueElse '}'  (45)
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable . ELSE sentenciaEjecutable  (47)
	cuerpoIncompleto : '(' condicionIf ')' sentenciaEjecutable .  (52)

	ELSE  shift 127
	END_IF  reduce 52


state 114
	sentenciaEjecutable : OUT '(' error ')' ';' .  (24)

	.  reduce 24


state 115
	sentenciaEjecutable : OUT '(' CADENA ')' ';' .  (23)

	.  reduce 23


state 116
	inicioFor : identificador '=' constante .  (33)

	.  reduce 33


state 117
	cicloFor : FOR '(' condicionFor ')' '{' . bloqueSentencia '}'  (30)

	error  shift 111
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 124
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 128


state 118
	condicionFor : inicioFor ';' condiFOR . ';' incDec  (31)

	';'  shift 129
	.  error


state 119
	condiFOR : condicion .  (32)

	.  reduce 32


state 120
	encabezadoProc : PROC identificador '(' ')' NA . '=' CTE ',' NS '=' CTE  (12)

	'='  shift 130
	.  error


state 121
	encabezadoProc : PROC identificador '(' parametrosProc ')' . NA '=' CTE ',' NS '=' CTE  (11)

	NA  shift 131
	.  error


state 122
	sentenciaEjecutable : identificador '(' parametrosProc ')' ';' .  (26)

	.  reduce 26


state 123
	parametrosProc : parametro ',' parametro .  (14)
	parametrosProc : parametro ',' parametro . ',' parametro  (15)

	','  shift 132
	')'  reduce 14


state 124
	bloqueSentencia : sentenciaEjecutable .  (41)

	.  reduce 41


state 125
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (40)
	bloqueThen : bloqueSentencia .  (49)

	error  shift 111
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  reduce 49

	sentenciaEjecutable  goto 133
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 126
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen . '}' ELSE '{' bloqueElse '}'  (44)
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen . '}' ELSE sentenciaEjecutable  (46)
	cuerpoIncompleto : '(' condicionIf ')' '{' bloqueThen . '}'  (51)

	'}'  shift 134
	.  error


state 127
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable ELSE . '{' bloqueElse '}'  (45)
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable ELSE . sentenciaEjecutable  (47)

	error  shift 111
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'{'  shift 135
	.  error

	sentenciaEjecutable  goto 136
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 128
	cicloFor : FOR '(' condicionFor ')' '{' bloqueSentencia . '}'  (30)
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (40)

	error  shift 111
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  shift 137
	.  error

	sentenciaEjecutable  goto 133
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 129
	condicionFor : inicioFor ';' condiFOR ';' . incDec  (31)

	error  shift 138
	UP  shift 139
	DOWN  shift 140
	.  error

	incDec  goto 141


state 130
	encabezadoProc : PROC identificador '(' ')' NA '=' . CTE ',' NS '=' CTE  (12)

	CTE  shift 142
	.  error


state 131
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA . '=' CTE ',' NS '=' CTE  (11)

	'='  shift 143
	.  error


state 132
	parametrosProc : parametro ',' parametro ',' . parametro  (15)

	error  shift 60
	INTEGER  shift 6
	FLOAT  shift 7
	.  error

	tipo  goto 62
	parametro  goto 144


state 133
	bloqueSentencia : bloqueSentencia sentenciaEjecutable .  (40)

	.  reduce 40


state 134
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' . ELSE '{' bloqueElse '}'  (44)
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' . ELSE sentenciaEjecutable  (46)
	cuerpoIncompleto : '(' condicionIf ')' '{' bloqueThen '}' .  (51)

	ELSE  shift 145
	END_IF  reduce 51


state 135
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable ELSE '{' . bloqueElse '}'  (45)

	error  shift 111
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 124
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 146
	bloqueElse  goto 147


state 136
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable ELSE sentenciaEjecutable .  (47)

	.  reduce 47


state 137
	cicloFor : FOR '(' condicionFor ')' '{' bloqueSentencia '}' .  (30)

	.  reduce 30


state 138
	incDec : error . constante  (39)

	error  shift 37
	CTE  shift 38
	'-'  shift 39
	.  error

	constante  goto 148
	ctePositiva  goto 45
	cteNegativa  goto 46


state 139
	incDec : UP . constante  (37)

	error  shift 37
	CTE  shift 38
	'-'  shift 39
	.  error

	constante  goto 149
	ctePositiva  goto 45
	cteNegativa  goto 46


state 140
	incDec : DOWN . constante  (38)

	error  shift 37
	CTE  shift 38
	'-'  shift 39
	.  error

	constante  goto 150
	ctePositiva  goto 45
	cteNegativa  goto 46


state 141
	condicionFor : inicioFor ';' condiFOR ';' incDec .  (31)

	.  reduce 31


state 142
	encabezadoProc : PROC identificador '(' ')' NA '=' CTE . ',' NS '=' CTE  (12)

	','  shift 151
	.  error


state 143
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' . CTE ',' NS '=' CTE  (11)

	CTE  shift 152
	.  error


state 144
	parametrosProc : parametro ',' parametro ',' parametro .  (15)

	.  reduce 15


state 145
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE . '{' bloqueElse '}'  (44)
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE . sentenciaEjecutable  (46)

	error  shift 111
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'{'  shift 153
	.  error

	sentenciaEjecutable  goto 154
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 146
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (40)
	bloqueElse : bloqueSentencia .  (50)

	error  shift 111
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  reduce 50

	sentenciaEjecutable  goto 133
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 147
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable ELSE '{' bloqueElse . '}'  (45)

	'}'  shift 155
	.  error


state 148
	incDec : error constante .  (39)

	.  reduce 39


state 149
	incDec : UP constante .  (37)

	.  reduce 37


state 150
	incDec : DOWN constante .  (38)

	.  reduce 38


state 151
	encabezadoProc : PROC identificador '(' ')' NA '=' CTE ',' . NS '=' CTE  (12)

	NS  shift 156
	.  error


state 152
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' CTE . ',' NS '=' CTE  (11)

	','  shift 157
	.  error


state 153
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE '{' . bloqueElse '}'  (44)

	error  shift 111
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 124
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 146
	bloqueElse  goto 158


state 154
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE sentenciaEjecutable .  (46)

	.  reduce 46


state 155
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable ELSE '{' bloqueElse '}' .  (45)

	.  reduce 45


state 156
	encabezadoProc : PROC identificador '(' ')' NA '=' CTE ',' NS . '=' CTE  (12)

	'='  shift 159
	.  error


state 157
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' CTE ',' . NS '=' CTE  (11)

	NS  shift 160
	.  error


state 158
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE '{' bloqueElse . '}'  (44)

	'}'  shift 161
	.  error


state 159
	encabezadoProc : PROC identificador '(' ')' NA '=' CTE ',' NS '=' . CTE  (12)

	CTE  shift 162
	.  error


state 160
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' CTE ',' NS . '=' CTE  (11)

	'='  shift 163
	.  error


state 161
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE '{' bloqueElse '}' .  (44)

	.  reduce 44


state 162
	encabezadoProc : PROC identificador '(' ')' NA '=' CTE ',' NS '=' CTE .  (12)

	.  reduce 12


state 163
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' CTE ',' NS '=' . CTE  (11)

	CTE  shift 164
	.  error


state 164
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' CTE ',' NS '=' CTE .  (11)

	.  reduce 11


37 terminals, 35 nonterminals
80 grammar rules, 165 states
