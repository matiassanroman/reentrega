   0  $accept : programa $end

   1  programa : bloquePrograma

   2  bloquePrograma : bloquePrograma sentenciaDeclarativa
   3                 | bloquePrograma sentenciaEjecutable
   4                 | sentenciaDeclarativa
   5                 | sentenciaEjecutable

   6  sentenciaDeclarativa : tipo listaVariables ';'
   7                       | declaracionProcedimiento

   8  listaVariables : listaVariables ',' identificador
   9                 | identificador

  10  declaracionProcedimiento : encabezadoProc bloqueProc

  11  encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' CTE ',' NS '=' CTE
  12                 | PROC identificador '(' ')' NA '=' CTE ',' NS '=' CTE
  13                 | PROC identificador '(' error ')' NA '=' CTE ',' NS '=' CTE

  14  nombres : identificador
  15          | identificador ',' identificador
  16          | identificador ',' identificador ',' identificador

  17  parametrosProc : parametro
  18                 | parametro ',' parametro
  19                 | parametro ',' parametro ',' parametro

  20  parametro : tipo identificador

  21  bloqueProc : '{' bloque '}'

  22  bloque : bloque sentenciaDeclarativa
  23         | bloque sentenciaEjecutable
  24         | sentenciaDeclarativa
  25         | sentenciaEjecutable

  26  sentenciaEjecutable : asignacion
  27                      | OUT '(' CADENA ')' ';'
  28                      | OUT '(' error ')' ';'
  29                      | identificador '(' nombres ')' ';'
  30                      | identificador '(' ')' ';'
<<<<<<< HEAD
  31                      | IF cuerpoIf
  32                      | cicloFor
  33                      | OUT '(' error ')' ';'
  34                      | IF error
=======
  31                      | identificador '(' error ')' ';'
  32                      | IF cuerpoIf
  33                      | cicloFor

  34  cicloFor : FOR '(' condicionFor ')' '{' bloqueSentencia '}'
>>>>>>> 588f1b79b640368aac78b0db86313e639e9d0d02

  35  condicionFor : inicioFor ';' condiFOR ';' incDec

  36  condiFOR : condicion

  37  inicioFor : identificador '=' constante

  38  condicion : identificador comparador asignacion
  39            | identificador comparador identificador
  40            | identificador comparador constante

  41  incDec : UP constante
  42         | DOWN constante
  43         | error constante

  44  bloqueSentencia : bloqueSentencia sentenciaEjecutable
  45                  | sentenciaEjecutable

  46  cuerpoIf : cuerpoCompleto END_IF
  47           | cuerpoIncompleto END_IF

<<<<<<< HEAD
  48  cuerpoIf : cuerpoCompleto END_IF
  49           | cuerpoIncompleto END_IF
=======
  48  cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE '{' bloqueElse '}'
  49                 | '(' condicionIf ')' sentenciaEjecutable ELSE '{' bloqueElse '}'
  50                 | '(' condicionIf ')' '{' bloqueThen '}' ELSE sentenciaEjecutable
  51                 | '(' condicionIf ')' sentenciaEjecutable ELSE sentenciaEjecutable
>>>>>>> 588f1b79b640368aac78b0db86313e639e9d0d02

  52  condicionIf : condicion

  53  bloqueThen : bloqueSentencia

  54  bloqueElse : bloqueSentencia

  55  cuerpoIncompleto : '(' condicionIf ')' '{' bloqueThen '}'
  56                   | '(' condicionIf ')' sentenciaEjecutable

  57  asignacion : identificador '=' expresion ';'
  58             | error '=' expresion ';'

  59  expresion : expresion '+' termino
  60            | expresion '-' termino
  61            | termino

  62  termino : termino '*' factor
  63          | termino '/' factor
  64          | factor

  65  factor : constante
  66         | identificador

  67  comparador : "<="
  68             | ">="
  69             | "!="
  70             | "=="
  71             | '>'
  72             | '<'
  73             | error

  74  tipo : FLOAT
  75       | INTEGER

  76  identificador : ID

  77  constante : ctePositiva
  78            | cteNegativa

  79  ctePositiva : CTE
  80              | error

  81  cteNegativa : '-' CTE
  82              | '-' error

state 0
	$accept : . programa $end  (0)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	INTEGER  shift 6
	FLOAT  shift 7
	PROC  shift 8
	.  error

	programa  goto 9
	bloquePrograma  goto 10
	sentenciaDeclarativa  goto 11
	sentenciaEjecutable  goto 12
	tipo  goto 13
	declaracionProcedimiento  goto 14
	identificador  goto 15
	encabezadoProc  goto 16
	asignacion  goto 17
	cicloFor  goto 18


state 1
	asignacion : error . '=' expresion ';'  (58)

	'='  shift 19
	.  error


state 2
	identificador : ID .  (76)

	.  reduce 76


state 3
<<<<<<< HEAD
	sentenciaEjecutable : IF . cuerpoIf  (31)
	sentenciaEjecutable : IF . error  (34)
=======
	sentenciaEjecutable : IF . cuerpoIf  (32)
>>>>>>> 588f1b79b640368aac78b0db86313e639e9d0d02

	'('  shift 20
	.  error

	cuerpoIf  goto 21
	cuerpoCompleto  goto 22
	cuerpoIncompleto  goto 23


state 4
	sentenciaEjecutable : OUT . '(' CADENA ')' ';'  (27)
	sentenciaEjecutable : OUT . '(' error ')' ';'  (28)

	'('  shift 24
	.  error


state 5
	cicloFor : FOR . '(' condicionFor ')' '{' bloqueSentencia '}'  (34)

	'('  shift 25
	.  error


state 6
	tipo : INTEGER .  (75)

	.  reduce 75


state 7
	tipo : FLOAT .  (74)

	.  reduce 74


state 8
	encabezadoProc : PROC . identificador '(' parametrosProc ')' NA '=' CTE ',' NS '=' CTE  (11)
	encabezadoProc : PROC . identificador '(' ')' NA '=' CTE ',' NS '=' CTE  (12)
	encabezadoProc : PROC . identificador '(' error ')' NA '=' CTE ',' NS '=' CTE  (13)

	ID  shift 2
	.  error

	identificador  goto 26


state 9
	$accept : programa . $end  (0)

	$end  accept


state 10
	programa : bloquePrograma .  (1)
	bloquePrograma : bloquePrograma . sentenciaDeclarativa  (2)
	bloquePrograma : bloquePrograma . sentenciaEjecutable  (3)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	INTEGER  shift 6
	FLOAT  shift 7
	PROC  shift 8
	$end  reduce 1

	sentenciaDeclarativa  goto 27
	sentenciaEjecutable  goto 28
	tipo  goto 13
	declaracionProcedimiento  goto 14
	identificador  goto 15
	encabezadoProc  goto 16
	asignacion  goto 17
	cicloFor  goto 18


state 11
	bloquePrograma : sentenciaDeclarativa .  (4)

	.  reduce 4


state 12
	bloquePrograma : sentenciaEjecutable .  (5)

	.  reduce 5


state 13
	sentenciaDeclarativa : tipo . listaVariables ';'  (6)

	ID  shift 2
	.  error

	listaVariables  goto 29
	identificador  goto 30


state 14
	sentenciaDeclarativa : declaracionProcedimiento .  (7)

	.  reduce 7


state 15
	sentenciaEjecutable : identificador . '(' nombres ')' ';'  (29)
	sentenciaEjecutable : identificador . '(' ')' ';'  (30)
	sentenciaEjecutable : identificador . '(' error ')' ';'  (31)
	asignacion : identificador . '=' expresion ';'  (57)

	'('  shift 31
	'='  shift 32
	.  error


state 16
	declaracionProcedimiento : encabezadoProc . bloqueProc  (10)

	'{'  shift 33
	.  error

	bloqueProc  goto 34


state 17
	sentenciaEjecutable : asignacion .  (26)

	.  reduce 26


state 18
	sentenciaEjecutable : cicloFor .  (33)

	.  reduce 33


state 19
	asignacion : error '=' . expresion ';'  (58)

	error  shift 35
	ID  shift 2
	CTE  shift 36
	'-'  shift 37
	.  error

	identificador  goto 38
	constante  goto 39
	expresion  goto 40
	termino  goto 41
	factor  goto 42
	ctePositiva  goto 43
	cteNegativa  goto 44


state 20
	cuerpoCompleto : '(' . condicionIf ')' '{' bloqueThen '}' ELSE '{' bloqueElse '}'  (48)
	cuerpoCompleto : '(' . condicionIf ')' sentenciaEjecutable ELSE '{' bloqueElse '}'  (49)
	cuerpoCompleto : '(' . condicionIf ')' '{' bloqueThen '}' ELSE sentenciaEjecutable  (50)
	cuerpoCompleto : '(' . condicionIf ')' sentenciaEjecutable ELSE sentenciaEjecutable  (51)
	cuerpoIncompleto : '(' . condicionIf ')' '{' bloqueThen '}'  (55)
	cuerpoIncompleto : '(' . condicionIf ')' sentenciaEjecutable  (56)

	ID  shift 2
	.  error

	identificador  goto 45
	condicion  goto 46
	condicionIf  goto 47


state 21
	sentenciaEjecutable : IF cuerpoIf .  (32)

	.  reduce 32


state 22
<<<<<<< HEAD
	sentenciaEjecutable : IF error .  (34)

	.  reduce 34
=======
	cuerpoIf : cuerpoCompleto . END_IF  (46)

	END_IF  shift 48
	.  error
>>>>>>> 588f1b79b640368aac78b0db86313e639e9d0d02


state 23
	cuerpoIf : cuerpoIncompleto . END_IF  (47)

	END_IF  shift 49
	.  error

<<<<<<< HEAD
	identificador  goto 39
	condicion  goto 40
	condicionIf  goto 41


state 24
	sentenciaEjecutable : IF cuerpoIf .  (31)

	.  reduce 31


state 25
	cuerpoIf : cuerpoCompleto . END_IF  (48)

	END_IF  shift 42
	.  error


state 26
	cuerpoIf : cuerpoIncompleto . END_IF  (49)

	END_IF  shift 43
	.  error


state 27
	sentenciaEjecutable : OUT '(' . CADENA ')' ';'  (28)
	sentenciaEjecutable : OUT '(' . error ')' ';'  (33)

	error  shift 44
	CADENA  shift 45
	.  error


state 28
	cicloFor : FOR '(' . condicionFor ')' '{' bloqueSentencia '}'  (35)
	cicloFor : FOR '(' . error ')' '{' bloqueSentencia '}'  (36)
	cicloFor : FOR '(' . condicionFor ')' '{' error '}'  (37)

	error  shift 46
=======

state 24
	sentenciaEjecutable : OUT '(' . CADENA ')' ';'  (27)
	sentenciaEjecutable : OUT '(' . error ')' ';'  (28)

	error  shift 50
	CADENA  shift 51
	.  error


state 25
	cicloFor : FOR '(' . condicionFor ')' '{' bloqueSentencia '}'  (34)

>>>>>>> 588f1b79b640368aac78b0db86313e639e9d0d02
	ID  shift 2
	.  error

	identificador  goto 52
	condicionFor  goto 53
	inicioFor  goto 54


state 26
	encabezadoProc : PROC identificador . '(' parametrosProc ')' NA '=' CTE ',' NS '=' CTE  (11)
	encabezadoProc : PROC identificador . '(' ')' NA '=' CTE ',' NS '=' CTE  (12)
	encabezadoProc : PROC identificador . '(' error ')' NA '=' CTE ',' NS '=' CTE  (13)

	'('  shift 55
	.  error


state 27
	bloquePrograma : bloquePrograma sentenciaDeclarativa .  (2)

	.  reduce 2


state 28
	bloquePrograma : bloquePrograma sentenciaEjecutable .  (3)

	.  reduce 3


state 29
	sentenciaDeclarativa : tipo listaVariables . ';'  (6)
	listaVariables : listaVariables . ',' identificador  (8)

	';'  shift 56
	','  shift 57
	.  error


state 30
	listaVariables : identificador .  (9)

	.  reduce 9


state 31
	sentenciaEjecutable : identificador '(' . nombres ')' ';'  (29)
	sentenciaEjecutable : identificador '(' . ')' ';'  (30)
	sentenciaEjecutable : identificador '(' . error ')' ';'  (31)

	error  shift 58
	ID  shift 2
	')'  shift 59
	.  error

	identificador  goto 60
	nombres  goto 61


state 32
	asignacion : identificador '=' . expresion ';'  (57)

	error  shift 35
	ID  shift 2
	CTE  shift 36
	'-'  shift 37
	.  error

	identificador  goto 38
	constante  goto 39
	expresion  goto 62
	termino  goto 41
	factor  goto 42
	ctePositiva  goto 43
	cteNegativa  goto 44


state 33
	bloqueProc : '{' . bloque '}'  (21)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	INTEGER  shift 6
	FLOAT  shift 7
	PROC  shift 8
	.  error

	sentenciaDeclarativa  goto 63
	sentenciaEjecutable  goto 64
	tipo  goto 13
	declaracionProcedimiento  goto 14
	identificador  goto 15
	encabezadoProc  goto 16
	bloque  goto 65
	asignacion  goto 17
	cicloFor  goto 18


state 34
	declaracionProcedimiento : encabezadoProc bloqueProc .  (10)

	.  reduce 10


state 35
	ctePositiva : error .  (80)

	.  reduce 80


state 36
	ctePositiva : CTE .  (79)

	.  reduce 79


state 37
	cteNegativa : '-' . CTE  (81)
	cteNegativa : '-' . error  (82)

	error  shift 66
	CTE  shift 67
	.  error


state 38
	factor : identificador .  (66)

	.  reduce 66


state 39
<<<<<<< HEAD
	condicion : identificador . comparador asignacion  (41)
	condicion : identificador . comparador identificador  (42)
	condicion : identificador . comparador constante  (43)
=======
	factor : constante .  (65)

	.  reduce 65


state 40
	asignacion : error '=' expresion . ';'  (58)
	expresion : expresion . '+' termino  (59)
	expresion : expresion . '-' termino  (60)
>>>>>>> 588f1b79b640368aac78b0db86313e639e9d0d02

	'+'  shift 68
	'-'  shift 69
	';'  shift 70
	.  error


<<<<<<< HEAD
state 40
	condicionIf : condicion .  (51)
=======
state 41
	expresion : termino .  (61)
	termino : termino . '*' factor  (62)
	termino : termino . '/' factor  (63)
>>>>>>> 588f1b79b640368aac78b0db86313e639e9d0d02

	'*'  shift 71
	'/'  shift 72
	'+'  reduce 61
	'-'  reduce 61
	';'  reduce 61


<<<<<<< HEAD
state 41
	cuerpoCompleto : '(' condicionIf . ')' '{' bloqueThen '}' ELSE '{' bloqueElse '}'  (50)
	cuerpoIncompleto : '(' condicionIf . ')' '{' bloqueThen '}'  (54)
=======
state 42
	termino : factor .  (64)
>>>>>>> 588f1b79b640368aac78b0db86313e639e9d0d02

	.  reduce 64


state 42
	cuerpoIf : cuerpoCompleto END_IF .  (48)

	.  reduce 48


state 43
<<<<<<< HEAD
	cuerpoIf : cuerpoIncompleto END_IF .  (49)

	.  reduce 49
=======
	constante : ctePositiva .  (77)

	.  reduce 77
>>>>>>> 588f1b79b640368aac78b0db86313e639e9d0d02


state 44
	constante : cteNegativa .  (78)

	.  reduce 78


state 45
	condicion : identificador . comparador asignacion  (38)
	condicion : identificador . comparador identificador  (39)
	condicion : identificador . comparador constante  (40)

	error  shift 73
	"<="  shift 74
	">="  shift 75
	"!="  shift 76
	"=="  shift 77
	'>'  shift 78
	'<'  shift 79
	.  error

	comparador  goto 80


state 46
	condicionIf : condicion .  (52)

	.  reduce 52


state 47
	cuerpoCompleto : '(' condicionIf . ')' '{' bloqueThen '}' ELSE '{' bloqueElse '}'  (48)
	cuerpoCompleto : '(' condicionIf . ')' sentenciaEjecutable ELSE '{' bloqueElse '}'  (49)
	cuerpoCompleto : '(' condicionIf . ')' '{' bloqueThen '}' ELSE sentenciaEjecutable  (50)
	cuerpoCompleto : '(' condicionIf . ')' sentenciaEjecutable ELSE sentenciaEjecutable  (51)
	cuerpoIncompleto : '(' condicionIf . ')' '{' bloqueThen '}'  (55)
	cuerpoIncompleto : '(' condicionIf . ')' sentenciaEjecutable  (56)

	')'  shift 81
	.  error


state 48
	cuerpoIf : cuerpoCompleto END_IF .  (46)

	.  reduce 46


state 49
	cuerpoIf : cuerpoIncompleto END_IF .  (47)

	.  reduce 47


state 50
	sentenciaEjecutable : OUT '(' error . ')' ';'  (28)

	')'  shift 82
	.  error


state 51
	sentenciaEjecutable : OUT '(' CADENA . ')' ';'  (27)

	')'  shift 83
	.  error


state 52
	inicioFor : identificador . '=' constante  (37)

	'='  shift 84
	.  error


state 53
	cicloFor : FOR '(' condicionFor . ')' '{' bloqueSentencia '}'  (34)

	')'  shift 85
	.  error


state 54
	condicionFor : inicioFor . ';' condiFOR ';' incDec  (35)

	';'  shift 86
	.  error


state 55
	encabezadoProc : PROC identificador '(' . parametrosProc ')' NA '=' CTE ',' NS '=' CTE  (11)
	encabezadoProc : PROC identificador '(' . ')' NA '=' CTE ',' NS '=' CTE  (12)
	encabezadoProc : PROC identificador '(' . error ')' NA '=' CTE ',' NS '=' CTE  (13)

	error  shift 87
	INTEGER  shift 6
	FLOAT  shift 7
	')'  shift 88
	.  error

	tipo  goto 89
	parametrosProc  goto 90
	parametro  goto 91


state 56
	sentenciaDeclarativa : tipo listaVariables ';' .  (6)

	.  reduce 6


state 57
	listaVariables : listaVariables ',' . identificador  (8)

	ID  shift 2
	.  error

	identificador  goto 92


state 58
	sentenciaEjecutable : identificador '(' error . ')' ';'  (31)

	')'  shift 93
	.  error


state 59
	sentenciaEjecutable : identificador '(' ')' . ';'  (30)

	';'  shift 94
	.  error


state 60
	nombres : identificador .  (14)
	nombres : identificador . ',' identificador  (15)
	nombres : identificador . ',' identificador ',' identificador  (16)

	','  shift 95
	')'  reduce 14


state 61
	sentenciaEjecutable : identificador '(' nombres . ')' ';'  (29)

	')'  shift 96
	.  error


state 62
	asignacion : identificador '=' expresion . ';'  (57)
	expresion : expresion . '+' termino  (59)
	expresion : expresion . '-' termino  (60)

	'+'  shift 68
	'-'  shift 69
	';'  shift 97
	.  error


state 63
	bloque : sentenciaDeclarativa .  (24)

	.  reduce 24


state 64
	bloque : sentenciaEjecutable .  (25)

	.  reduce 25


state 65
	bloqueProc : '{' bloque . '}'  (21)
	bloque : bloque . sentenciaDeclarativa  (22)
	bloque : bloque . sentenciaEjecutable  (23)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	INTEGER  shift 6
	FLOAT  shift 7
	PROC  shift 8
	'}'  shift 98
	.  error

	sentenciaDeclarativa  goto 99
	sentenciaEjecutable  goto 100
	tipo  goto 13
	declaracionProcedimiento  goto 14
	identificador  goto 15
	encabezadoProc  goto 16
	asignacion  goto 17
	cicloFor  goto 18


state 66
	cteNegativa : '-' error .  (82)

	.  reduce 82


state 67
	cteNegativa : '-' CTE .  (81)

	.  reduce 81


state 68
	expresion : expresion '+' . termino  (59)

	error  shift 35
	ID  shift 2
	CTE  shift 36
	'-'  shift 37
	.  error

	identificador  goto 38
	constante  goto 39
	termino  goto 101
	factor  goto 42
	ctePositiva  goto 43
	cteNegativa  goto 44


state 69
	expresion : expresion '-' . termino  (60)

	error  shift 35
	ID  shift 2
	CTE  shift 36
	'-'  shift 37
	.  error

	identificador  goto 38
	constante  goto 39
	termino  goto 102
	factor  goto 42
	ctePositiva  goto 43
	cteNegativa  goto 44


state 70
	asignacion : error '=' expresion ';' .  (58)

	.  reduce 58


state 71
	termino : termino '*' . factor  (62)

	error  shift 35
	ID  shift 2
	CTE  shift 36
	'-'  shift 37
	.  error

	identificador  goto 38
	constante  goto 39
	factor  goto 103
	ctePositiva  goto 43
	cteNegativa  goto 44


state 72
	termino : termino '/' . factor  (63)

	error  shift 35
	ID  shift 2
	CTE  shift 36
	'-'  shift 37
	.  error

	identificador  goto 38
	constante  goto 39
	factor  goto 104
	ctePositiva  goto 43
	cteNegativa  goto 44


state 73
	comparador : error .  (73)

	.  reduce 73


state 74
	comparador : "<=" .  (67)

	.  reduce 67


state 75
	comparador : ">=" .  (68)

	.  reduce 68


state 76
	comparador : "!=" .  (69)

	.  reduce 69


state 77
	comparador : "==" .  (70)

	.  reduce 70


state 78
	comparador : '>' .  (71)

	.  reduce 71


state 79
	comparador : '<' .  (72)

	.  reduce 72


state 80
	condicion : identificador comparador . asignacion  (38)
	condicion : identificador comparador . identificador  (39)
	condicion : identificador comparador . constante  (40)

	error  shift 105
	ID  shift 2
	CTE  shift 36
	'-'  shift 37
	.  error

	identificador  goto 106
	asignacion  goto 107
	constante  goto 108
	ctePositiva  goto 43
	cteNegativa  goto 44


state 81
	cuerpoCompleto : '(' condicionIf ')' . '{' bloqueThen '}' ELSE '{' bloqueElse '}'  (48)
	cuerpoCompleto : '(' condicionIf ')' . sentenciaEjecutable ELSE '{' bloqueElse '}'  (49)
	cuerpoCompleto : '(' condicionIf ')' . '{' bloqueThen '}' ELSE sentenciaEjecutable  (50)
	cuerpoCompleto : '(' condicionIf ')' . sentenciaEjecutable ELSE sentenciaEjecutable  (51)
	cuerpoIncompleto : '(' condicionIf ')' . '{' bloqueThen '}'  (55)
	cuerpoIncompleto : '(' condicionIf ')' . sentenciaEjecutable  (56)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'{'  shift 109
	.  error

	sentenciaEjecutable  goto 110
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 82
	sentenciaEjecutable : OUT '(' error ')' . ';'  (28)

	';'  shift 111
	.  error

<<<<<<< HEAD
	identificador  goto 39
	condiFOR  goto 110
	condicion  goto 111

=======
>>>>>>> 588f1b79b640368aac78b0db86313e639e9d0d02

state 83
	sentenciaEjecutable : OUT '(' CADENA ')' . ';'  (27)

	';'  shift 112
	.  error


state 84
	inicioFor : identificador '=' . constante  (37)

	error  shift 35
	CTE  shift 36
	'-'  shift 37
	.  error

	constante  goto 113
	ctePositiva  goto 43
	cteNegativa  goto 44


state 85
	cicloFor : FOR '(' condicionFor ')' . '{' bloqueSentencia '}'  (34)

	'{'  shift 114
	.  error


state 86
	condicionFor : inicioFor ';' . condiFOR ';' incDec  (35)

	ID  shift 2
	.  error

	identificador  goto 45
	condiFOR  goto 115
	condicion  goto 116


state 87
	encabezadoProc : PROC identificador '(' error . ')' NA '=' CTE ',' NS '=' CTE  (13)

	')'  shift 117
	.  error


state 88
	encabezadoProc : PROC identificador '(' ')' . NA '=' CTE ',' NS '=' CTE  (12)

	NA  shift 118
	.  error


state 89
	parametro : tipo . identificador  (20)

	ID  shift 2
	.  error

	identificador  goto 119


state 90
	encabezadoProc : PROC identificador '(' parametrosProc . ')' NA '=' CTE ',' NS '=' CTE  (11)

	')'  shift 120
	.  error


state 91
	parametrosProc : parametro .  (17)
	parametrosProc : parametro . ',' parametro  (18)
	parametrosProc : parametro . ',' parametro ',' parametro  (19)

	','  shift 121
	')'  reduce 17


state 92
	listaVariables : listaVariables ',' identificador .  (8)

	.  reduce 8


state 93
	sentenciaEjecutable : identificador '(' error ')' . ';'  (31)

	';'  shift 122
	.  error


state 94
	sentenciaEjecutable : identificador '(' ')' ';' .  (30)

	.  reduce 30


state 95
	nombres : identificador ',' . identificador  (15)
	nombres : identificador ',' . identificador ',' identificador  (16)

	ID  shift 2
	.  error

	identificador  goto 123


state 96
	sentenciaEjecutable : identificador '(' nombres ')' . ';'  (29)

	';'  shift 124
	.  error


state 97
	asignacion : identificador '=' expresion ';' .  (57)

	.  reduce 57


state 98
	bloqueProc : '{' bloque '}' .  (21)

	.  reduce 21


state 99
	bloque : bloque sentenciaDeclarativa .  (22)

	.  reduce 22


state 100
	bloque : bloque sentenciaEjecutable .  (23)

	.  reduce 23


state 101
	expresion : expresion '+' termino .  (59)
	termino : termino . '*' factor  (62)
	termino : termino . '/' factor  (63)

	'*'  shift 71
	'/'  shift 72
	'+'  reduce 59
	'-'  reduce 59
	';'  reduce 59


state 102
	expresion : expresion '-' termino .  (60)
	termino : termino . '*' factor  (62)
	termino : termino . '/' factor  (63)

	'*'  shift 71
	'/'  shift 72
	'+'  reduce 60
	'-'  reduce 60
	';'  reduce 60


state 103
	termino : termino '*' factor .  (62)

	.  reduce 62


state 104
	termino : termino '/' factor .  (63)

	.  reduce 63


state 105
	asignacion : error . '=' expresion ';'  (58)
	ctePositiva : error .  (80)

	'='  shift 19
	';'  reduce 80
	')'  reduce 80


state 106
	condicion : identificador comparador identificador .  (39)
	asignacion : identificador . '=' expresion ';'  (57)

	'='  shift 32
	';'  reduce 39
	')'  reduce 39


state 107
	condicion : identificador comparador asignacion .  (38)

	.  reduce 38


state 108
	condicion : identificador comparador constante .  (40)

	.  reduce 40


state 109
	cuerpoCompleto : '(' condicionIf ')' '{' . bloqueThen '}' ELSE '{' bloqueElse '}'  (48)
	cuerpoCompleto : '(' condicionIf ')' '{' . bloqueThen '}' ELSE sentenciaEjecutable  (50)
	cuerpoIncompleto : '(' condicionIf ')' '{' . bloqueThen '}'  (55)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 125
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 126
	bloqueThen  goto 127


state 110
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable . ELSE '{' bloqueElse '}'  (49)
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable . ELSE sentenciaEjecutable  (51)
	cuerpoIncompleto : '(' condicionIf ')' sentenciaEjecutable .  (56)

	ELSE  shift 128
	END_IF  reduce 56


state 111
	sentenciaEjecutable : OUT '(' error ')' ';' .  (28)

	.  reduce 28


state 112
	sentenciaEjecutable : OUT '(' CADENA ')' ';' .  (27)

	.  reduce 27


state 113
	inicioFor : identificador '=' constante .  (37)

	.  reduce 37


state 114
	cicloFor : FOR '(' condicionFor ')' '{' . bloqueSentencia '}'  (34)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 125
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 129


state 115
	condicionFor : inicioFor ';' condiFOR . ';' incDec  (35)

	';'  shift 130
	.  error


state 116
	condiFOR : condicion .  (36)

	.  reduce 36


state 117
	encabezadoProc : PROC identificador '(' error ')' . NA '=' CTE ',' NS '=' CTE  (13)

	NA  shift 131
	.  error


state 118
	encabezadoProc : PROC identificador '(' ')' NA . '=' CTE ',' NS '=' CTE  (12)

	'='  shift 132
	.  error


state 119
	parametro : tipo identificador .  (20)

	.  reduce 20


state 120
	encabezadoProc : PROC identificador '(' parametrosProc ')' . NA '=' CTE ',' NS '=' CTE  (11)

	NA  shift 133
	.  error


state 121
	parametrosProc : parametro ',' . parametro  (18)
	parametrosProc : parametro ',' . parametro ',' parametro  (19)

	INTEGER  shift 6
	FLOAT  shift 7
	.  error

	tipo  goto 89
	parametro  goto 134


state 122
	sentenciaEjecutable : identificador '(' error ')' ';' .  (31)

	.  reduce 31


state 123
	nombres : identificador ',' identificador .  (15)
	nombres : identificador ',' identificador . ',' identificador  (16)

	','  shift 135
	')'  reduce 15


state 124
	sentenciaEjecutable : identificador '(' nombres ')' ';' .  (29)

	.  reduce 29


state 125
	bloqueSentencia : sentenciaEjecutable .  (45)

	.  reduce 45


state 126
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (44)
	bloqueThen : bloqueSentencia .  (53)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  reduce 53

	sentenciaEjecutable  goto 136
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 127
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen . '}' ELSE '{' bloqueElse '}'  (48)
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen . '}' ELSE sentenciaEjecutable  (50)
	cuerpoIncompleto : '(' condicionIf ')' '{' bloqueThen . '}'  (55)

	'}'  shift 137
	.  error


state 128
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable ELSE . '{' bloqueElse '}'  (49)
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable ELSE . sentenciaEjecutable  (51)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'{'  shift 138
	.  error

	sentenciaEjecutable  goto 139
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 129
	cicloFor : FOR '(' condicionFor ')' '{' bloqueSentencia . '}'  (34)
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (44)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  shift 140
	.  error

	sentenciaEjecutable  goto 136
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 130
	condicionFor : inicioFor ';' condiFOR ';' . incDec  (35)

	error  shift 141
	UP  shift 142
	DOWN  shift 143
	.  error

	incDec  goto 144


state 131
	encabezadoProc : PROC identificador '(' error ')' NA . '=' CTE ',' NS '=' CTE  (13)

	'='  shift 145
	.  error


state 132
	encabezadoProc : PROC identificador '(' ')' NA '=' . CTE ',' NS '=' CTE  (12)

	CTE  shift 146
	.  error


state 133
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA . '=' CTE ',' NS '=' CTE  (11)

	'='  shift 147
	.  error


state 134
	parametrosProc : parametro ',' parametro .  (18)
	parametrosProc : parametro ',' parametro . ',' parametro  (19)

	','  shift 148
	')'  reduce 18


state 135
	nombres : identificador ',' identificador ',' . identificador  (16)

	ID  shift 2
	.  error

	identificador  goto 149


state 136
	bloqueSentencia : bloqueSentencia sentenciaEjecutable .  (44)

	.  reduce 44


state 137
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' . ELSE '{' bloqueElse '}'  (48)
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' . ELSE sentenciaEjecutable  (50)
	cuerpoIncompleto : '(' condicionIf ')' '{' bloqueThen '}' .  (55)

	ELSE  shift 150
	END_IF  reduce 55


state 138
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable ELSE '{' . bloqueElse '}'  (49)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 125
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 151
	bloqueElse  goto 152


state 139
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable ELSE sentenciaEjecutable .  (51)

	.  reduce 51


state 140
	cicloFor : FOR '(' condicionFor ')' '{' bloqueSentencia '}' .  (34)

	.  reduce 34


state 141
	incDec : error . constante  (43)

	error  shift 35
	CTE  shift 36
	'-'  shift 37
	.  error

	constante  goto 153
	ctePositiva  goto 43
	cteNegativa  goto 44


state 142
	incDec : UP . constante  (41)

	error  shift 35
	CTE  shift 36
	'-'  shift 37
	.  error

	constante  goto 154
	ctePositiva  goto 43
	cteNegativa  goto 44


state 143
	incDec : DOWN . constante  (42)

	error  shift 35
	CTE  shift 36
	'-'  shift 37
	.  error

	constante  goto 155
	ctePositiva  goto 43
	cteNegativa  goto 44


state 144
	condicionFor : inicioFor ';' condiFOR ';' incDec .  (35)

	.  reduce 35


state 145
	encabezadoProc : PROC identificador '(' error ')' NA '=' . CTE ',' NS '=' CTE  (13)

	CTE  shift 156
	.  error


state 146
	encabezadoProc : PROC identificador '(' ')' NA '=' CTE . ',' NS '=' CTE  (12)

	','  shift 157
	.  error


state 147
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' . CTE ',' NS '=' CTE  (11)

	CTE  shift 158
	.  error


state 148
	parametrosProc : parametro ',' parametro ',' . parametro  (19)

	INTEGER  shift 6
	FLOAT  shift 7
	.  error

	tipo  goto 89
	parametro  goto 159


state 149
	nombres : identificador ',' identificador ',' identificador .  (16)

	.  reduce 16


state 150
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE . '{' bloqueElse '}'  (48)
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE . sentenciaEjecutable  (50)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'{'  shift 160
	.  error

	sentenciaEjecutable  goto 161
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 151
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (44)
	bloqueElse : bloqueSentencia .  (54)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  reduce 54

	sentenciaEjecutable  goto 136
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 152
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable ELSE '{' bloqueElse . '}'  (49)

	'}'  shift 162
	.  error


state 153
	incDec : error constante .  (43)

	.  reduce 43


state 154
	incDec : UP constante .  (41)

	.  reduce 41


state 155
	incDec : DOWN constante .  (42)

	.  reduce 42


state 156
	encabezadoProc : PROC identificador '(' error ')' NA '=' CTE . ',' NS '=' CTE  (13)

	','  shift 163
	.  error


state 157
	encabezadoProc : PROC identificador '(' ')' NA '=' CTE ',' . NS '=' CTE  (12)

	NS  shift 164
	.  error


state 158
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' CTE . ',' NS '=' CTE  (11)

	','  shift 165
	.  error


state 159
	parametrosProc : parametro ',' parametro ',' parametro .  (19)

	.  reduce 19


state 160
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE '{' . bloqueElse '}'  (48)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 125
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 151
	bloqueElse  goto 166


state 161
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE sentenciaEjecutable .  (50)

	.  reduce 50


state 162
	cuerpoCompleto : '(' condicionIf ')' sentenciaEjecutable ELSE '{' bloqueElse '}' .  (49)

	.  reduce 49


state 163
	encabezadoProc : PROC identificador '(' error ')' NA '=' CTE ',' . NS '=' CTE  (13)

	NS  shift 167
	.  error


state 164
	encabezadoProc : PROC identificador '(' ')' NA '=' CTE ',' NS . '=' CTE  (12)

	'='  shift 168
	.  error


state 165
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' CTE ',' . NS '=' CTE  (11)

	NS  shift 169
	.  error


state 166
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE '{' bloqueElse . '}'  (48)

	'}'  shift 170
	.  error


state 167
	encabezadoProc : PROC identificador '(' error ')' NA '=' CTE ',' NS . '=' CTE  (13)

	'='  shift 171
	.  error


state 168
	encabezadoProc : PROC identificador '(' ')' NA '=' CTE ',' NS '=' . CTE  (12)

	CTE  shift 172
	.  error


state 169
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' CTE ',' NS . '=' CTE  (11)

	'='  shift 173
	.  error


state 170
	cuerpoCompleto : '(' condicionIf ')' '{' bloqueThen '}' ELSE '{' bloqueElse '}' .  (48)

	.  reduce 48


state 171
	encabezadoProc : PROC identificador '(' error ')' NA '=' CTE ',' NS '=' . CTE  (13)

	CTE  shift 174
	.  error


state 172
	encabezadoProc : PROC identificador '(' ')' NA '=' CTE ',' NS '=' CTE .  (12)

	.  reduce 12


state 173
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' CTE ',' NS '=' . CTE  (11)

	CTE  shift 175
	.  error


state 174
	encabezadoProc : PROC identificador '(' error ')' NA '=' CTE ',' NS '=' CTE .  (13)

	.  reduce 13


state 175
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' CTE ',' NS '=' CTE .  (11)

	.  reduce 11


37 terminals, 36 nonterminals
83 grammar rules, 176 states
